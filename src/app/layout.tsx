"use client";
import AOS from "aos";
import "aos/dist/aos.css";
import "./globals.css";
import type { Metadata } from "next";
import "@mantine/core/styles.css";
import "@mantine/carousel/styles.css";
import { MantineProvider, ColorSchemeScript } from "@mantine/core";
import { Inter } from "next/font/google";
import ScrollComponent from "@/components/scroll.component";
import NavbarComponent from "@/components/navbar.component";
import FooterComponent from "@/components/footer.component";
import { useMouse } from "@mantine/hooks";
import { motion } from "framer-motion";
import Image from "next/image";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Bijles SR",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const { ref, x, y } = useMouse();

  AOS.init({
    // Global settings:
    disable: false, // accepts following values: 'phone', 'tablet', 'mobile', boolean, expression or function
    startEvent: "DOMContentLoaded", // name of the event dispatched on the document, that AOS should initialize on
    initClassName: "aos-init", // class applied after initialization
    animatedClassName: "aos-animate", // class applied on animation
    useClassNames: false, // if true, will add content of `data-aos` as classes on scroll
    disableMutationObserver: false, // disables automatic mutations' detections (advanced)
    debounceDelay: 50, // the delay on debounce used while resizing window (advanced)
    throttleDelay: 99, // the delay on throttle used while scrolling the page (advanced)

    // Settings that can be overridden on per-element basis, by `data-aos-*` attributes:
    offset: 120, // offset (in px) from the original trigger point
    delay: 0, // values from 0 to 3000, with step 50ms
    duration: 400, // values from 0 to 3000, with step 50ms
    easing: "ease", // default easing for AOS animations
    once: false, // whether animation should happen only once - while scrolling down
    mirror: false, // whether elements should animate out while scrolling past them
    anchorPlacement: "top-bottom", // defines which position of the element regarding to window should trigger the animation
  });

  return (
    <html
      ref={ref}
      lang="en"
      style={{ scrollBehavior: "smooth", overflowX: "hidden" }}
    >
      <head>
        <ColorSchemeScript />
        <link
          rel="apple-touch-icon"
          sizes="180x180"
          href="/apple-touch-icon.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="32x32"
          href="/favicon-32x32.png"
        />
        <link
          rel="icon"
          type="image/png"
          sizes="16x16"
          href="/favicon-16x16.png"
        />
        <link rel="manifest" href="/site.webmanifest" />
        <meta name="msapplication-TileColor" content="#da532c" />
        <meta name="theme-color" content="#ffffff"></meta>
      </head>
      <body className={`${inter.className}`}>
        <MantineProvider>
          <main className="flex min-h-screen flex-col mx-auto items-center">
            <motion.div
              ref={ref}
              className="box"
              animate={{ x: x - 500, y: y - 10 }}
              transition={{
                type: "spring",
                damping: 20,
                stiffness: 30,
                restDelta: 0.001,
              }}
              style={{
                width: "100px",
                height: "100px",
                borderRadius: "50%",
                position: "absolute",
                zIndex: 20,
              }}
            >
              {" "}
              <Image
                src={"/assets/gifs/bee.gif"}
                alt="bee"
                width={30}
                height={30}
              />{" "}
            </motion.div>
            <ScrollComponent>
              <NavbarComponent />
              {children}
              <FooterComponent />
            </ScrollComponent>
          </main>
        </MantineProvider>
      </body>
    </html>
  );
}
